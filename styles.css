/* --- NEW: Reset default margin and box-sizing --- */
html {
    box-sizing: border-box;
}
*, *:before, *:after {
    box-sizing: inherit;
}

/* --- MODIFIED: Make body fill the viewport height --- */
body {
    font-family: Arial, sans-serif;
    background-color: #f0f4f8;
    color: #333;
    margin: 0; /* Remove default margin */
    padding: 20px;
    min-height: 100vh; /* Use min-height to ensure it fills screen but can grow */
    display: flex; /* Use flexbox to arrange children */
    flex-direction: column; /* Stack children vertically */
    gap: 20px; /* Add space between heading and container */
}

h1 {
    text-align: center;
    color: #005a8d;
    flex-shrink: 0; /* Prevent the heading from shrinking */
    font-size: 2em; /* Default font size */
}

/* --- MODIFIED: Make the container fill available space --- */
.container {
    display: flex;
    gap: 20px;
    max-width: 1200px;
    width: 100%; /* Ensure it uses full width up to max-width */
    margin: 0 auto; /* Keep it centered */
    background: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 10px rgba(0,0,0,0.1);
    flex-grow: 1; /* Allow the container to grow and fill remaining vertical space */
    overflow: hidden; /* Prevent container from causing a scrollbar on desktop */
}

/* Layout map container as two columns: the SVG and the legend image as a flex row.
   This prevents absolute overlap and keeps the legend always beside the SVG on
   larger screens; on small screens they will stack. */
#map-container {
    flex: 2;
    border: 1px solid #ccc;
    border-radius: 8px;
    padding: 10px;
    display: flex; /* Use flex to place svg and legend as siblings */
    align-items: center;
    justify-content: center;
    gap: 16px; /* space between svg and legend */
    min-height: 0; /* Fix for flexbox overflow bug in some browsers */
}

/* Ensure SVG scales correctly but leaves room for the legend */
#map-container svg {
    max-width: calc(100% - 140px); /* leave space for legend on desktop */
    height: auto;
    width: 100%;
}

/* Legend image becomes a normal flex item next to the svg */
#levels-legend {
    flex: 0 0 120px; /* fixed-ish width but won't grow */
    width: 120px;
    height: auto;
    border: 1px solid rgba(0,0,0,0.08);
    border-radius: 6px;
    background: rgba(255,255,255,0.9);
    padding: 6px;
    box-shadow: 0 6px 18px rgba(0,0,0,0.08);
    z-index: 20; /* above svg but below tooltip */
}

/* On small screens, stack map and legend vertically and avoid overlap */
@media (max-width: 768px) {
    /* Keep the map and legend side-by-side on mobile too. The legend
       will remain a narrow vertical bar at the side (rotated) and the
       svg will take the remaining width. This avoids stacking and keeps
       the legend visible alongside the map on small screens. */
    #map-container {
        flex-direction: row; /* keep svg and legend side-by-side */
        align-items: center;
        padding: 6px;
    }

    #map-container svg {
        /* Leave room for the legend (approx 110px) */
        max-width: calc(100% - 110px);
        height: 300px; /* predictable height for mobile */
        width: 100%;
        flex: 1 1 auto;
    }

    /* legend sits to the right of the svg as a fixed narrow column */
    #levels-legend {
        width: 90px;
        flex: 0 0 90px;
        align-self: stretch;
        margin: 0 0 0 8px;
        padding: 4px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    /* Rotate the legend on mobile and center it below the map. Use
       transform with rotation and adjust origin so the image lays out
       horizontally in available space without overlapping the svg. */
     /* Rotate the legend on mobile and constrain it so the rotated
         image's visual width fits the viewport (use max-height based on
         viewport width because rotation swaps dimensions). */
    #levels-legend.rotate-mobile {
        
        
        /* make the rotated bar roughly as tall as the svg (but capped)
           so it looks like a vertical bar alongside the map */
        max-height: 260px;
        width: auto;
        height: auto;
        object-fit: contain;
        margin:auto 0;
        
        display: block;
        will-change: transform;
    }
}

/* --- MODIFIED: Allow info-panel to scroll internally if needed --- */
#info-panel {
    flex: 1;
    padding: 20px;
    background-color: #eaf2f8;
    border-radius: 8px;
    overflow-y: auto; /* Change to auto to allow scrolling */
    min-height: 0; /* Fix for flexbox overflow bug */
}

/* --- SVG Styles (No changes here) --- */
.st30 {
    fill: #aed581;
    stroke: #558b2f;
    stroke-width: 2;
    transition: fill 0.3s ease, opacity 0.3s ease;
    cursor: pointer;
}

svg:hover .st30:not(:hover) {
    opacity: 0.6;
}

.st30:hover {
    fill: #8bc34a; /* A slightly brighter green on hover */
}

#tooltip {
    position: absolute;
    background-color: rgba(0, 0, 0, 0.8);
    color: #fff;
    padding: 8px 12px;
    border-radius: 4px;
    font-size: 14px;
    white-space: nowrap;
    visibility: hidden;
    opacity: 0;
    transition: opacity 0.2s;
    pointer-events: none; 
    z-index: 100;
}

/* --- Slider Styles --- */
.slider-container {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    overflow: hidden; /* NEW: This will hide the edges of adjacent slides */
}

.slider-wrapper {
    display: flex;
    transition: transform 0.5s ease-in-out;
}

.slide {
    flex: 0 0 100%;
    padding: 0 10px;
    text-align: left;
}

.slide img {
    width: 100%; /* Make image responsive */
    height: 200px; 
    object-fit: cover;
    border-radius: 8px;
    margin-bottom: 15px;
    border: 1px solid #ddd;
}

.slide-content h3 {
    margin-top: 0;
    color: #005a8d;
    font-size: 1.1em;
}

.slide-content p {
    margin: 8px 0;
    line-height: 1.5;
    font-size: 0.9em;
}

.slide-content p strong {
    color: #333;
}

.slider-btn {
    position: absolute;
    top: 100px; /* Position relative to the image height */
    transform: translateY(-50%);
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    font-size: 20px;
    cursor: pointer;
    z-index: 10;
    display: flex;
    align-items: center;
    justify-content: center;
}

.slider-btn.prev {
    left: 10px;
}

.slider-btn.next {
    right: 10px;
}

.slider-btn:hover {
    background-color: rgba(0, 0, 0, 0.8);
}

/* --- NEW: Media Query for Mobile Responsiveness --- */
@media (max-width: 768px) {
    body {
        padding: 10px;
        gap: 15px;
    }

    h1 {
        font-size: 1.5em; /* Reduce font size for smaller screens */
        margin-bottom: 0;
    }

    .container {
        flex-direction: column; /* Stack map and info panel vertically */
        padding: 10px;
        /* Let the container's height fit its content instead of creating an internal scroll area. */
        /* This makes the whole page scroll naturally, revealing the info panel. */
        flex-grow: 0;
        overflow: visible;
        height: auto;
    }

    #map-container {
        /* Give the map a predictable, fixed height on mobile */
        height: 300px;
    }

    #info-panel {
        /* Allow the panel to be as tall as its content needs to be */
        height: auto;
        max-height: none;
    }

    .slide img {
        height: 150px; /* Reduce image height on mobile */
    }

    .slider-btn {
        top: 75px; /* Adjust button position for smaller image */
        width: 35px;
        height: 35px;
        font-size: 18px;
    }
}

